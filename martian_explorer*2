def next_position(direction, row, col, row_size, col_size):
    if direction == "up":
        if row == 0:
            return row + row_size - 1, col
        else:
            return row - 1, col
    if direction == "down":
        if row == row_size - 1:
            return row - (row_size - 1), col
        else:
            return row + 1, col
    if direction == "left":
        if col == 0:
            return row, col + col_size - 1
        else:
            return row, col - 1
    if direction == "right":
        if col == col_size - 1:
            return row, col - (col_size - 1)
        else:
            return row, col + 1


size = 6
matrix = []
rover_row, rover_col = 0, 0
water_deposit = 0
metal_deposit = 0
concrete_deposit = 0
rocks = 0

for row in range(size):
    matrix.append(input().split())
    for col in range(size):
        if matrix[row][col] == "E":
            rover_row, rover_col = row, col
commands = input().split(', ')

for command in commands:
    rover_row, rover_col = next_position(command, rover_row, rover_col, size, size)
    if matrix[rover_row][rover_col] == "R":
        print(f"Rover got broken at ({rover_row}, {rover_col})")
        break
    elif matrix[rover_row][rover_col] == "-":
        pass
    elif matrix[rover_row][rover_col] == "W":
        water_deposit += 1
        print(f"Water deposit found at ({rover_row}, {rover_col})")
    elif matrix[rover_row][rover_col] == "M":
        metal_deposit += 1
        print(f"Metal deposit found at ({rover_row}, {rover_col})")
    elif matrix[rover_row][rover_col] == "C":
        concrete_deposit += 1
        print(f"Concrete deposit found at ({rover_row}, {rover_col})")

if water_deposit >= 1 and metal_deposit >= 1 and concrete_deposit >= 1:
    print("Area suitable to start the colony.")
else:
    print("Area not suitable to start the colony.")
