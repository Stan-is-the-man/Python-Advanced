def get_next_pos(row, col, where_to, step):
    if where_to == "up":
        return row - step, col
    if where_to == "down":
        return row + step, col
    if where_to == "left":
        return row, col - step
    if where_to == "right":
        return row, col + step


def is_outside(row, col, matrix_size):
    return row < 0 or col < 0 or row >= matrix_size or col >= matrix_size


size = 5
matrix = []
start_row = 0
start_col = 0
total_targets = 0
shooted_targets = 0
shooted_positions = []

for row in range(size):
    element = input().split()
    matrix.append(element)
    for col in range(size):
        if matrix[row][col] == "A":
            start_row = row
            start_col = col
        elif matrix[row][col] == "x":
            total_targets += 1
n = int(input())
for _ in range(n):
    command = input().split()
    action = command[0]
    direction = command[1]
    if action == 'move':
        steps = int(command[2])
        current_row, current_col = get_next_pos(start_row, start_col, direction, steps)
        if is_outside(current_row, current_col, size) or matrix[current_row][current_col] != ".":
            continue
        matrix[start_row][start_col] = '.'
        start_row, start_col = current_row, current_col
        matrix[start_row][start_col] = 'A'

    elif action == 'shoot':
        shoot_row, shoot_col = start_row, start_col
        while True:
            shoot_row, shoot_col = get_next_pos(shoot_row, shoot_col, direction, 1)
            if is_outside(shoot_row, shoot_col, size):
                break
            if matrix[shoot_row][shoot_col] == 'x':
                shooted_targets += 1
                shooted_positions.append([shoot_row, shoot_col])
                matrix[shoot_row][shoot_col] = '.'
                break
        if total_targets - shooted_targets == 0:
            break

if total_targets - shooted_targets == 0:
    print(f"Training completed! All {shooted_targets} targets hit.")
else:
    print(f"Training not completed! {total_targets - shooted_targets} targets left.")
for x in shooted_positions:
    print(x)
